/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutUpgradeRouteImport } from './routes/_layout/upgrade'
import { Route as LayoutSuccessRouteImport } from './routes/_layout/success'
import { Route as LayoutSettingsRouteImport } from './routes/_layout/settings'
import { Route as LayoutItemsRouteImport } from './routes/_layout/items'
import { Route as LayoutDashboardRouteImport } from './routes/_layout/dashboard'
import { Route as LayoutAdminRouteImport } from './routes/_layout/admin'
import { Route as LayoutPremiumScanIdRouteImport } from './routes/_layout/premium.$scanId'
import { Route as LayoutPaywallScanIdRouteImport } from './routes/_layout/paywall.$scanId'
import { Route as LayoutDashboardScanIdRouteImport } from './routes/_layout/dashboard.$scanId'
import { Route as LayoutPaywallSimpleScanIdRouteImport } from './routes/_layout/paywall.simple.$scanId'
import { Route as LayoutDashboardTeaserScanIdRouteImport } from './routes/_layout/dashboard.teaser.$scanId'
import { Route as LayoutDashboardFullScanIdRouteImport } from './routes/_layout/dashboard.full.$scanId'
import { Route as LayoutDashboardAnalyzingScanIdRouteImport } from './routes/_layout/dashboard.analyzing.$scanId'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutUpgradeRoute = LayoutUpgradeRouteImport.update({
  id: '/upgrade',
  path: '/upgrade',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSuccessRoute = LayoutSuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutSettingsRoute = LayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutItemsRoute = LayoutItemsRouteImport.update({
  id: '/items',
  path: '/items',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDashboardRoute = LayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAdminRoute = LayoutAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPremiumScanIdRoute = LayoutPremiumScanIdRouteImport.update({
  id: '/premium/$scanId',
  path: '/premium/$scanId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutPaywallScanIdRoute = LayoutPaywallScanIdRouteImport.update({
  id: '/paywall/$scanId',
  path: '/paywall/$scanId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutDashboardScanIdRoute = LayoutDashboardScanIdRouteImport.update({
  id: '/$scanId',
  path: '/$scanId',
  getParentRoute: () => LayoutDashboardRoute,
} as any)
const LayoutPaywallSimpleScanIdRoute =
  LayoutPaywallSimpleScanIdRouteImport.update({
    id: '/paywall/simple/$scanId',
    path: '/paywall/simple/$scanId',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutDashboardTeaserScanIdRoute =
  LayoutDashboardTeaserScanIdRouteImport.update({
    id: '/teaser/$scanId',
    path: '/teaser/$scanId',
    getParentRoute: () => LayoutDashboardRoute,
  } as any)
const LayoutDashboardFullScanIdRoute =
  LayoutDashboardFullScanIdRouteImport.update({
    id: '/full/$scanId',
    path: '/full/$scanId',
    getParentRoute: () => LayoutDashboardRoute,
  } as any)
const LayoutDashboardAnalyzingScanIdRoute =
  LayoutDashboardAnalyzingScanIdRouteImport.update({
    id: '/analyzing/$scanId',
    path: '/analyzing/$scanId',
    getParentRoute: () => LayoutDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof LayoutAdminRoute
  '/dashboard': typeof LayoutDashboardRouteWithChildren
  '/items': typeof LayoutItemsRoute
  '/settings': typeof LayoutSettingsRoute
  '/success': typeof LayoutSuccessRoute
  '/upgrade': typeof LayoutUpgradeRoute
  '/': typeof LayoutIndexRoute
  '/dashboard/$scanId': typeof LayoutDashboardScanIdRoute
  '/paywall/$scanId': typeof LayoutPaywallScanIdRoute
  '/premium/$scanId': typeof LayoutPremiumScanIdRoute
  '/dashboard/analyzing/$scanId': typeof LayoutDashboardAnalyzingScanIdRoute
  '/dashboard/full/$scanId': typeof LayoutDashboardFullScanIdRoute
  '/dashboard/teaser/$scanId': typeof LayoutDashboardTeaserScanIdRoute
  '/paywall/simple/$scanId': typeof LayoutPaywallSimpleScanIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof LayoutAdminRoute
  '/dashboard': typeof LayoutDashboardRouteWithChildren
  '/items': typeof LayoutItemsRoute
  '/settings': typeof LayoutSettingsRoute
  '/success': typeof LayoutSuccessRoute
  '/upgrade': typeof LayoutUpgradeRoute
  '/': typeof LayoutIndexRoute
  '/dashboard/$scanId': typeof LayoutDashboardScanIdRoute
  '/paywall/$scanId': typeof LayoutPaywallScanIdRoute
  '/premium/$scanId': typeof LayoutPremiumScanIdRoute
  '/dashboard/analyzing/$scanId': typeof LayoutDashboardAnalyzingScanIdRoute
  '/dashboard/full/$scanId': typeof LayoutDashboardFullScanIdRoute
  '/dashboard/teaser/$scanId': typeof LayoutDashboardTeaserScanIdRoute
  '/paywall/simple/$scanId': typeof LayoutPaywallSimpleScanIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_layout/admin': typeof LayoutAdminRoute
  '/_layout/dashboard': typeof LayoutDashboardRouteWithChildren
  '/_layout/items': typeof LayoutItemsRoute
  '/_layout/settings': typeof LayoutSettingsRoute
  '/_layout/success': typeof LayoutSuccessRoute
  '/_layout/upgrade': typeof LayoutUpgradeRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/dashboard/$scanId': typeof LayoutDashboardScanIdRoute
  '/_layout/paywall/$scanId': typeof LayoutPaywallScanIdRoute
  '/_layout/premium/$scanId': typeof LayoutPremiumScanIdRoute
  '/_layout/dashboard/analyzing/$scanId': typeof LayoutDashboardAnalyzingScanIdRoute
  '/_layout/dashboard/full/$scanId': typeof LayoutDashboardFullScanIdRoute
  '/_layout/dashboard/teaser/$scanId': typeof LayoutDashboardTeaserScanIdRoute
  '/_layout/paywall/simple/$scanId': typeof LayoutPaywallSimpleScanIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/dashboard'
    | '/items'
    | '/settings'
    | '/success'
    | '/upgrade'
    | '/'
    | '/dashboard/$scanId'
    | '/paywall/$scanId'
    | '/premium/$scanId'
    | '/dashboard/analyzing/$scanId'
    | '/dashboard/full/$scanId'
    | '/dashboard/teaser/$scanId'
    | '/paywall/simple/$scanId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/dashboard'
    | '/items'
    | '/settings'
    | '/success'
    | '/upgrade'
    | '/'
    | '/dashboard/$scanId'
    | '/paywall/$scanId'
    | '/premium/$scanId'
    | '/dashboard/analyzing/$scanId'
    | '/dashboard/full/$scanId'
    | '/dashboard/teaser/$scanId'
    | '/paywall/simple/$scanId'
  id:
    | '__root__'
    | '/_layout'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_layout/admin'
    | '/_layout/dashboard'
    | '/_layout/items'
    | '/_layout/settings'
    | '/_layout/success'
    | '/_layout/upgrade'
    | '/_layout/'
    | '/_layout/dashboard/$scanId'
    | '/_layout/paywall/$scanId'
    | '/_layout/premium/$scanId'
    | '/_layout/dashboard/analyzing/$scanId'
    | '/_layout/dashboard/full/$scanId'
    | '/_layout/dashboard/teaser/$scanId'
    | '/_layout/paywall/simple/$scanId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/upgrade': {
      id: '/_layout/upgrade'
      path: '/upgrade'
      fullPath: '/upgrade'
      preLoaderRoute: typeof LayoutUpgradeRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/success': {
      id: '/_layout/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof LayoutSuccessRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/settings': {
      id: '/_layout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof LayoutSettingsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/items': {
      id: '/_layout/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof LayoutItemsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/admin': {
      id: '/_layout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof LayoutAdminRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/premium/$scanId': {
      id: '/_layout/premium/$scanId'
      path: '/premium/$scanId'
      fullPath: '/premium/$scanId'
      preLoaderRoute: typeof LayoutPremiumScanIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/paywall/$scanId': {
      id: '/_layout/paywall/$scanId'
      path: '/paywall/$scanId'
      fullPath: '/paywall/$scanId'
      preLoaderRoute: typeof LayoutPaywallScanIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard/$scanId': {
      id: '/_layout/dashboard/$scanId'
      path: '/$scanId'
      fullPath: '/dashboard/$scanId'
      preLoaderRoute: typeof LayoutDashboardScanIdRouteImport
      parentRoute: typeof LayoutDashboardRoute
    }
    '/_layout/paywall/simple/$scanId': {
      id: '/_layout/paywall/simple/$scanId'
      path: '/paywall/simple/$scanId'
      fullPath: '/paywall/simple/$scanId'
      preLoaderRoute: typeof LayoutPaywallSimpleScanIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/dashboard/teaser/$scanId': {
      id: '/_layout/dashboard/teaser/$scanId'
      path: '/teaser/$scanId'
      fullPath: '/dashboard/teaser/$scanId'
      preLoaderRoute: typeof LayoutDashboardTeaserScanIdRouteImport
      parentRoute: typeof LayoutDashboardRoute
    }
    '/_layout/dashboard/full/$scanId': {
      id: '/_layout/dashboard/full/$scanId'
      path: '/full/$scanId'
      fullPath: '/dashboard/full/$scanId'
      preLoaderRoute: typeof LayoutDashboardFullScanIdRouteImport
      parentRoute: typeof LayoutDashboardRoute
    }
    '/_layout/dashboard/analyzing/$scanId': {
      id: '/_layout/dashboard/analyzing/$scanId'
      path: '/analyzing/$scanId'
      fullPath: '/dashboard/analyzing/$scanId'
      preLoaderRoute: typeof LayoutDashboardAnalyzingScanIdRouteImport
      parentRoute: typeof LayoutDashboardRoute
    }
  }
}

interface LayoutDashboardRouteChildren {
  LayoutDashboardScanIdRoute: typeof LayoutDashboardScanIdRoute
  LayoutDashboardAnalyzingScanIdRoute: typeof LayoutDashboardAnalyzingScanIdRoute
  LayoutDashboardFullScanIdRoute: typeof LayoutDashboardFullScanIdRoute
  LayoutDashboardTeaserScanIdRoute: typeof LayoutDashboardTeaserScanIdRoute
}

const LayoutDashboardRouteChildren: LayoutDashboardRouteChildren = {
  LayoutDashboardScanIdRoute: LayoutDashboardScanIdRoute,
  LayoutDashboardAnalyzingScanIdRoute: LayoutDashboardAnalyzingScanIdRoute,
  LayoutDashboardFullScanIdRoute: LayoutDashboardFullScanIdRoute,
  LayoutDashboardTeaserScanIdRoute: LayoutDashboardTeaserScanIdRoute,
}

const LayoutDashboardRouteWithChildren = LayoutDashboardRoute._addFileChildren(
  LayoutDashboardRouteChildren,
)

interface LayoutRouteChildren {
  LayoutAdminRoute: typeof LayoutAdminRoute
  LayoutDashboardRoute: typeof LayoutDashboardRouteWithChildren
  LayoutItemsRoute: typeof LayoutItemsRoute
  LayoutSettingsRoute: typeof LayoutSettingsRoute
  LayoutSuccessRoute: typeof LayoutSuccessRoute
  LayoutUpgradeRoute: typeof LayoutUpgradeRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutPaywallScanIdRoute: typeof LayoutPaywallScanIdRoute
  LayoutPremiumScanIdRoute: typeof LayoutPremiumScanIdRoute
  LayoutPaywallSimpleScanIdRoute: typeof LayoutPaywallSimpleScanIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAdminRoute: LayoutAdminRoute,
  LayoutDashboardRoute: LayoutDashboardRouteWithChildren,
  LayoutItemsRoute: LayoutItemsRoute,
  LayoutSettingsRoute: LayoutSettingsRoute,
  LayoutSuccessRoute: LayoutSuccessRoute,
  LayoutUpgradeRoute: LayoutUpgradeRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutPaywallScanIdRoute: LayoutPaywallScanIdRoute,
  LayoutPremiumScanIdRoute: LayoutPremiumScanIdRoute,
  LayoutPaywallSimpleScanIdRoute: LayoutPaywallSimpleScanIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
